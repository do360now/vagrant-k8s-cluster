###################################
# Install Kubernetes Packages
###################################

- name: Update the repository cache
  apt:
    update_cache: yes

- name: Install prerequisite packages (state=present is optional)
  apt:
    name: 
      - containerd
    state: present


# # Load new containerd configuration
# - sysctl:
#     name: containerd
#     reload: yes

- name: Make sure a service is running
  systemd:
    state: started
    name: containerd

  # notify:
  #   - Restart containerd

# #Install Kubernetes packages - kubeadm, kubelet and kubectl
# #
# - name: Add Google's apt repository gpg key
#   command: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -"

# - name: Add an Apt signing key, uses whichever key is at the URL
#   ansible.builtin.apt_key:
#     url: https://ftp-master.debian.org/keys/archive-key-6.0.asc
#     state: present

# - name: Install a .deb package
#   apt:
#     deb: https://apt.kubernetes.io/ kubernetes-xenial main


# #Add the Kubernetes apt repository
# sudo bash -c 'cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
# deb https://apt.kubernetes.io/ kubernetes-xenial main
# EOF'

# - name: Checking the installation of the kubernetes packages
#   shell: "dpkg -l | grep kubelet.*"
#   register: package_k8s

- name: Update the repository cache
  apt:
    update_cache: yes
  # when: package_k8s.rc == 1   

- name: Install kubernetes packages  (state=present is optional)
  apt:
    name: 
      - "kubelet={{ k8s_version }}"
      - "kubeadm={{ k8s_version }}"
      - "kubectl={{ k8s_version }}"
    state: present
  # when: package_kbs.rc == 1

- name: hold versions
  command: "apt-mark hold kubelet kubeadm kubectl containerd"

- name: #Ensure both are set to start when the system starts up.
  service:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - kubelet
    - containerd
